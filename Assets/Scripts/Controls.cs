//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/OtherAssets/InputActions/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Player Control"",
            ""id"": ""0cd0cd84-6967-4509-9499-958dd6629b25"",
            ""actions"": [
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Value"",
                    ""id"": ""cb301b93-d8f6-4697-b8bd-bac0a4da422f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""86971bb9-e8fc-4372-a9db-fa16960ab069"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera Look"",
                    ""type"": ""Value"",
                    ""id"": ""9d178781-404f-4a39-ac88-08e1e30e546b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""958afde1-05e3-4d6d-af0a-674a5bb2b027"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Value"",
                    ""id"": ""11146c83-1fad-4c44-a091-e7d40c1d401c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sightjack"",
                    ""type"": ""Button"",
                    ""id"": ""f9a5e7f8-1308-462a-adfe-57a576809843"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""253f220a-422b-4566-b6cb-1f7233821b95"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""bd8eb7f6-400c-4f0b-aac7-4c51ca631d99"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Journal Archive"",
                    ""type"": ""Button"",
                    ""id"": ""9b5d8a63-02b2-4513-bdc5-9c5e69b85579"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7000a2d9-6a74-4b3d-ab75-fc2615bcfb67"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6a005e0-94b9-4852-a0b8-e7f24445946d"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49e405cc-06fd-4336-81b4-56fa0bb06afc"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""982a7eae-8d9a-465c-b57a-0120f0c645d8"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3618280-97c3-441e-bd94-03925aeabaa2"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.1,y=0.1)"",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Camera Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72daa2eb-4f7a-4f65-bc19-415d3a2944dc"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false),StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Camera Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""24a1fa32-43ef-4e85-97e7-bf42ed12ce4e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7444395f-1c59-4e05-917f-3ddffb6a56ad"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""03a43453-7b4c-4f0a-a331-8e8539fc0a01"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""61a00e91-b4b8-489d-8052-9088ee356e51"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""684e8722-131d-4cdb-9470-60fae3274ba4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""39652819-1e5a-4d38-ab94-f71823fbc8dc"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""523e1264-ef11-4c58-ad6f-dfb88e0946c0"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5c462daa-ca99-4604-864b-fa401bcf18e7"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16ce6374-81f9-4f58-87f6-9bda79ba032f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sightjack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f757de0-b62f-425f-a956-4040171d30b3"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Sightjack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81a18047-5bbf-49ff-9bfb-fbb40aba88aa"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c587f2d7-ad99-4054-8a00-f77b17c6cfda"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b6eb6cf-8fbd-4a60-a577-6a5f603619d8"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""591476a5-ffa8-4173-9882-3611976ca7c5"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Journal Archive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""d6aad3d1-dbf4-4d55-9ac8-7f1ba5cb7ace"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""Value"",
                    ""id"": ""e629167f-fbd0-4aa1-bb0e-b4ce1eb02d08"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""9cb4cb01-21dc-45ed-9883-cefc030c6c9f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""5b85b35a-4e3f-4ef9-bc8c-6dc3494e2340"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""90c2fae9-1ddf-46ae-86cd-24babe68eba5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d9df0727-6414-4f5a-a66d-e2f2919fb1a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""70b3e27e-ea67-4b06-8d10-955476e16eb5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""52ee479e-d439-4af0-b869-354aeff4b95a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""70f088a8-7675-4ac9-9041-cc42cba7c043"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9d799a40-db16-4207-b1a9-8c9abe1e6697"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b7e3e7d2-4dc2-489b-9ba9-47fb75839197"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""a9b3ca93-f2e0-4a83-831f-73367ab6815c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""f26084ea-0b92-4434-8741-8dda8e9306f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Advance"",
                    ""type"": ""Button"",
                    ""id"": ""a46c850f-272a-4924-a622-c44119083771"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Journal Archive"",
                    ""type"": ""Button"",
                    ""id"": ""d376a89d-735c-4b64-a2eb-b99c74daf828"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""d14bb684-9be9-4e87-9d10-1bbb985044b3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a6ca88b6-2d35-4bd0-ae25-5b3fe5fe5992"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d04553bb-9ab3-4504-8754-da49562c2527"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""73eee12f-63ec-4099-b481-b8219fa208f8"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""778af61d-f4d5-44e7-b3e0-b3edd8780ffa"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4cecfae0-aad6-42d6-a9d7-f4b567422f26"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cab0513b-0f91-4a4d-bcad-451579363601"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""12115579-b4d4-454a-9fe7-f50c595a4325"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e0ba74f7-9099-444f-996a-e30d7c3ad68f"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ec289941-18fe-4386-99b9-c3aeb5cb7cc3"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""006a43a0-8691-4d71-ad3e-ede2d8cdb06d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6b28ce88-2316-47a3-86fd-8af75b8ff5e5"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""59587d30-ee82-4cd9-b24f-6dbd4a00c1c4"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""09940f9f-bb20-4ae7-9522-5048065bf808"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f0265dbe-bb86-4287-84e0-ec5353730eb9"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""5ea12823-7b78-4c17-a701-aa401847bcb0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""20287161-bc77-4eb1-84a9-efc5cb4e7c2c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7eb5b76c-eb65-4a42-b260-8b462ea402b3"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8cfaecef-d15f-40a6-b07c-89474a52d04f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""15cf75a3-765a-402d-a025-0cef4045e6c1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f6f86ab9-3518-4946-baec-41b186171bbc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4f10bb39-0afc-41f7-9e46-abbec31c91dd"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1840aeb1-2fc7-44c8-8b27-471551a6073f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""07b69842-cd03-4f10-90f1-cbbfd6b291ab"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8d02ddaa-7145-41c1-a46c-51a924421453"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d5660f4-76eb-4b18-9e8a-d6c46940fd67"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cee575dd-7c39-4b46-be4c-2303a96eccae"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b0e14ea-7e93-4cdc-a564-e89f3b072d08"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cce39c26-14d8-41ae-b61a-1e793d5d6690"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29417317-f04b-408e-88e6-5e6f36321d8d"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00f9137d-df33-4583-92b8-2fdae3622269"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b2372c12-ec07-40c7-8701-7731336e88b5"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8bf333f8-3009-41ac-8573-fd2f4c22d269"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""60fdf0ac-9dc8-4e67-ab5c-9d67420ecbf2"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5403635-41c0-48b7-944f-e25a3ce40640"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a91f6d2-2e35-4a8c-8bcc-701c502a44ed"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd4c76f2-9e75-4d63-ae22-c84d36fe79f5"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53c4bee3-affd-4fac-b13b-da6320db56c9"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e021ed8-4fc2-4409-86da-e6fe3823fb81"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0264061d-9aab-43f8-93da-94f851c24f31"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17682adf-dcf5-466f-954c-ee6525f42015"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5325452-1e30-4726-b124-f4fba0e01582"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Advance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7becf9e3-db14-42a8-87b9-fe890d1e0dc8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Advance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5482695-8e44-40cf-a5fa-f3f2a4c81666"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Advance"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f015acf8-d46f-4c93-9008-ced50ec56a35"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c6d32b8-a198-43ca-bb91-bd18e86af6b5"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Journal Archive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Sightjacking"",
            ""id"": ""a2c71513-ce91-42b8-a735-f1e7bea8a7f6"",
            ""actions"": [
                {
                    ""name"": ""Exit Sightjacking"",
                    ""type"": ""Button"",
                    ""id"": ""49fbfb78-429d-4291-ad53-c7b8ba818597"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Set Ghost Camera 1"",
                    ""type"": ""Button"",
                    ""id"": ""acabac3b-0372-480b-8ee3-3b32c8456b29"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Set Ghost Camera 2"",
                    ""type"": ""Button"",
                    ""id"": ""7b3579dd-51a3-4da2-abab-914ecb45cfc4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Set Ghost Camera 3"",
                    ""type"": ""Button"",
                    ""id"": ""9cadf95d-69d1-404b-a92d-298afa06d987"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Set Ghost Camera 4"",
                    ""type"": ""Button"",
                    ""id"": ""21f2e1c9-c188-4eed-9dee-a765230236be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Set Ghost Camera 5"",
                    ""type"": ""Button"",
                    ""id"": ""cbbc1bca-bcd8-48df-84fc-e35afd290e02"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Set Ghost Camera 6"",
                    ""type"": ""Button"",
                    ""id"": ""018d9402-096e-4733-a876-1ae75e18952e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Set Ghost Camera 7"",
                    ""type"": ""Button"",
                    ""id"": ""b7f336d7-319e-435a-b0da-7db0c0da3ee2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Set Ghost Camera 8"",
                    ""type"": ""Button"",
                    ""id"": ""6a16f911-79b5-454d-b095-c721adbb2e07"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Set Ghost Camera 9"",
                    ""type"": ""Button"",
                    ""id"": ""147dfc7e-83e2-43e0-bbd4-7e89278f6d98"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Set Ghost Camera 10"",
                    ""type"": ""Button"",
                    ""id"": ""41dd8e82-4407-418f-81e1-a8c071ed0c62"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Next Ghost Camera"",
                    ""type"": ""Button"",
                    ""id"": ""c8eb421c-980f-4a80-967f-a07d8f7dc412"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll Ghost Camera"",
                    ""type"": ""Value"",
                    ""id"": ""065de24d-7c81-4a08-b5b3-cd388e2e794d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""2fe87b29-7468-457c-88c1-2a0a6b3f0706"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""42f13f4c-cd7f-463f-9e29-91aaa50dd309"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StunEnemy"",
                    ""type"": ""Button"",
                    ""id"": ""12afaef5-50d8-41ab-8d53-8b5513a8f5d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Journal Archive"",
                    ""type"": ""Button"",
                    ""id"": ""7e3778d8-1753-4e98-ba26-f640516a39f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4dd27247-aef9-4fb8-9d4e-5c6a9a540486"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Exit Sightjacking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""274e0e6d-1b66-4e92-8d05-cbac201bd45f"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Exit Sightjacking"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5f5b32e-9aab-4e8d-90a6-bbf8d3b78ec1"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Set Ghost Camera 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ec2c5e8-4600-4c9c-a2d2-85cdda4c1573"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Set Ghost Camera 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70ffd17b-a185-48a9-958e-634308e3db0f"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Set Ghost Camera 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06a9f352-ac23-4926-8219-b3b4152519dd"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Set Ghost Camera 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fddeab22-8695-4637-a3b0-63bece5d8240"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Set Ghost Camera 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c48424a-9dfa-4c7b-8498-3b40e9c7470e"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Set Ghost Camera 6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11556695-22fc-49d3-835b-cdccba0eae07"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Set Ghost Camera 7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44991022-c6c9-40d2-8622-952d517a6506"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Set Ghost Camera 8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de24e042-d3a6-4600-8a2e-664a68de5e73"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Set Ghost Camera 9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94282bf6-2c72-46ab-a4b3-f0a1c928eedd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Next Ghost Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""99ffc2ec-505f-4bb3-9572-63dc6ee89e8f"",
                    ""path"": ""<Keyboard>/leftAlt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Next Ghost Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc3ab19a-dc7c-4203-b0ba-b19082ce017a"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0664718-3e75-4858-8466-da939149c671"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cdeeaef1-a9c6-4d35-8649-14892530bed0"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StunEnemy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a5b16c3-a06e-49fb-9175-86277f2564ea"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StunEnemy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1a6ef0b-a879-4bdf-b8d6-2a2591caff94"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": ""Normalize(min=-1,max=1)"",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Scroll Ghost Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""828da469-d2ee-47d9-876d-91cf8ec0801a"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll Ghost Camera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""db28b26d-0f9b-4cd3-ba05-d78cd232dc67"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll Ghost Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a844ad74-0237-425a-8e26-ea97c7bfef8e"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll Ghost Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e70b3d0b-baed-4215-b4ca-e1633efd8af4"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""96e96055-9ee5-4bf3-b0b9-49944480bd2a"",
                    ""path"": ""<Keyboard>/0"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Set Ghost Camera 10"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc5550a5-9e9e-4da6-82bf-70e7cc547be3"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Journal Archive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Journal"",
            ""id"": ""534f0408-b3ad-4852-b0f8-0af5d094a60e"",
            ""actions"": [
                {
                    ""name"": ""Close"",
                    ""type"": ""Button"",
                    ""id"": ""2b62afa0-e25e-4c68-ba4d-4523a0a493cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleBackground"",
                    ""type"": ""Button"",
                    ""id"": ""b1534811-ddd5-4b5e-9965-578c037fc559"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ba1f2448-5fe4-4947-8eac-664dd01c681d"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e9bade2-937a-468d-9424-b88308475041"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56c94a13-0ec2-4beb-bace-983695877fdf"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5d07cad-e75c-4be0-bf4f-63978960f1dc"",
                    ""path"": ""<Keyboard>/numpadEnter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b00ead78-bb59-495e-ad2a-4a5e155fbb14"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ToggleBackground"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""None"",
            ""id"": ""7904a8b5-1bd5-43be-adf3-935e3b9834eb"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""682b4c6f-41da-438a-a6c3-a59b471e7168"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""1f96338d-ef20-439a-951c-1bf9c58e116c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Journal Archive"",
                    ""type"": ""Button"",
                    ""id"": ""147bfc00-87d3-4303-aad0-38aa6daee2ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b36720ac-7710-4d84-ab10-0ffa27027032"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eecf1ed3-ccc2-4133-a299-80cb66e71415"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e36e4349-e071-41ef-a34b-0a30d5277923"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98a823e0-8b5a-43c5-9907-7db58f045918"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Journal Archive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Debug"",
            ""id"": ""c2fc86f0-902d-4f73-8ec6-9772211b168f"",
            ""actions"": [
                {
                    ""name"": ""Load save"",
                    ""type"": ""Button"",
                    ""id"": ""48109fa2-c4c1-41f0-8681-1580ea634951"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Get All Journals"",
                    ""type"": ""Button"",
                    ""id"": ""3190da67-5bf3-4cec-b10a-008cfc2c9ac1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""bed0abba-437d-446a-8ea3-e9001ccc0efe"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Load save"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2b1a3406-6398-49d4-9639-a2270c9988df"",
                    ""path"": ""<Keyboard>/f12"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Get All Journals"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""AlienMiniGame"",
            ""id"": ""a8ae4f73-8887-44b3-a553-0aa4bccbd51a"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""574613d5-4627-47a9-b474-d15022b613cd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""36d0308e-1fdb-475b-bb5b-cde3a60afe87"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RemoteViewing"",
                    ""type"": ""Button"",
                    ""id"": ""24af56aa-d3c4-4067-bc4f-269907e8e56c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""700be845-1fef-4e88-b49f-d4625168d8d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""5ff3bb00-0c86-4926-80ec-77081c8055c7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""eb73bdac-5249-4ff8-9cef-2c152e35f942"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""305ba356-d432-49c3-9da1-15e60365de96"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""d3412388-3135-48af-8798-43ecf28c5d68"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0027062f-9b60-44b4-b972-f91665cc9e10"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""69c73ac9-a28c-484b-a224-e22e2a4f06db"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2fda8c07-9ec9-42bc-9acd-067ee32482d4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""left"",
                    ""id"": ""151da677-26b9-4140-87ff-1be8fd153aa0"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""921f10a1-ee79-480a-84fa-e8446be681a5"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7ad6495b-04cf-4824-8147-40f344d6dc80"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f71e8308-acbf-413b-92e1-10233be057f1"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ffbe3c4b-1e96-4081-a9e9-46495a3ad7eb"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""RemoteViewing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d710fc8-683a-4d14-b2a7-e5a3e67522d3"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RemoteViewing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e99574a9-e620-440a-b14c-5675c8d26fa4"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3183af2b-8bc2-4346-ab1c-32d064472abd"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Journal Archive"",
            ""id"": ""bf374e46-7dca-4551-898a-53881c670b89"",
            ""actions"": [
                {
                    ""name"": ""Next Entry"",
                    ""type"": ""Button"",
                    ""id"": ""5ec27ded-fc9d-407b-9868-763fd889771a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleBackground"",
                    ""type"": ""Button"",
                    ""id"": ""cfab23e4-6a3b-4090-afbf-b3e5a3122584"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Previous Entry"",
                    ""type"": ""Button"",
                    ""id"": ""cb4308bc-9024-451a-9a36-993b7a1c8a47"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Exit"",
                    ""type"": ""Button"",
                    ""id"": ""0ac1eb48-358e-4419-bfba-daff266f0d01"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Next Area"",
                    ""type"": ""Button"",
                    ""id"": ""d27a8bf1-405d-433e-a9e0-20b72326fbaf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Previous Area"",
                    ""type"": ""Button"",
                    ""id"": ""8e7b70c4-19f9-44a2-acf7-15582a52def1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8de39d31-03b9-4d74-9005-3e1b77efb480"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next Entry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f81bcf0d-7169-4a23-a2a1-c4e0c0998823"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next Entry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2b9f58b-0c44-4ad4-86c3-1f63509c9dfd"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next Entry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00a1f4a8-480f-4a23-a25f-44d48ff6f6c1"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Previous Entry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c304b9d0-222b-4f1d-8911-724eaab01d56"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Previous Entry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""523b5481-b66b-47bb-92b0-3d8cf75c3cb8"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Previous Entry"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1fbf133e-9a6a-4263-859c-e0e598eb41a2"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d8dd29c-7146-41da-ad32-2d90945eff62"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64c45da1-65fc-48bd-afee-5c6cd551fbc5"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Exit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1fab92e-d544-404b-86aa-7fe5d052b6dd"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next Area"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6153cdc-c441-4b9f-8a5e-d339a0572c80"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next Area"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79d09d53-b11f-4d1d-b3a2-ab5ed3eacaec"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next Area"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ff7818a-aefe-42f8-b5ae-6d801758d77b"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Previous Area"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14262a3f-79dc-4024-b3fe-7cd43e371a68"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Previous Area"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fdd51a72-fb0e-4641-b364-91d3b155f03f"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Previous Area"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3d8d95e-9817-4340-aeb0-120154fdfe3b"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard & Mouse"",
                    ""action"": ""ToggleBackground"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard & Mouse"",
            ""bindingGroup"": ""Keyboard & Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player Control
        m_PlayerControl = asset.FindActionMap("Player Control", throwIfNotFound: true);
        m_PlayerControl_Crouch = m_PlayerControl.FindAction("Crouch", throwIfNotFound: true);
        m_PlayerControl_Interact = m_PlayerControl.FindAction("Interact", throwIfNotFound: true);
        m_PlayerControl_CameraLook = m_PlayerControl.FindAction("Camera Look", throwIfNotFound: true);
        m_PlayerControl_Move = m_PlayerControl.FindAction("Move", throwIfNotFound: true);
        m_PlayerControl_Sprint = m_PlayerControl.FindAction("Sprint", throwIfNotFound: true);
        m_PlayerControl_Sightjack = m_PlayerControl.FindAction("Sightjack", throwIfNotFound: true);
        m_PlayerControl_Pause = m_PlayerControl.FindAction("Pause", throwIfNotFound: true);
        m_PlayerControl_Inventory = m_PlayerControl.FindAction("Inventory", throwIfNotFound: true);
        m_PlayerControl_JournalArchive = m_PlayerControl.FindAction("Journal Archive", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
        m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        m_UI_ScrollWheel = m_UI.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UI_MiddleClick = m_UI.FindAction("MiddleClick", throwIfNotFound: true);
        m_UI_RightClick = m_UI.FindAction("RightClick", throwIfNotFound: true);
        m_UI_TrackedDevicePosition = m_UI.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_UI_TrackedDeviceOrientation = m_UI.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        m_UI_Back = m_UI.FindAction("Back", throwIfNotFound: true);
        m_UI_Inventory = m_UI.FindAction("Inventory", throwIfNotFound: true);
        m_UI_Advance = m_UI.FindAction("Advance", throwIfNotFound: true);
        m_UI_JournalArchive = m_UI.FindAction("Journal Archive", throwIfNotFound: true);
        // Sightjacking
        m_Sightjacking = asset.FindActionMap("Sightjacking", throwIfNotFound: true);
        m_Sightjacking_ExitSightjacking = m_Sightjacking.FindAction("Exit Sightjacking", throwIfNotFound: true);
        m_Sightjacking_SetGhostCamera1 = m_Sightjacking.FindAction("Set Ghost Camera 1", throwIfNotFound: true);
        m_Sightjacking_SetGhostCamera2 = m_Sightjacking.FindAction("Set Ghost Camera 2", throwIfNotFound: true);
        m_Sightjacking_SetGhostCamera3 = m_Sightjacking.FindAction("Set Ghost Camera 3", throwIfNotFound: true);
        m_Sightjacking_SetGhostCamera4 = m_Sightjacking.FindAction("Set Ghost Camera 4", throwIfNotFound: true);
        m_Sightjacking_SetGhostCamera5 = m_Sightjacking.FindAction("Set Ghost Camera 5", throwIfNotFound: true);
        m_Sightjacking_SetGhostCamera6 = m_Sightjacking.FindAction("Set Ghost Camera 6", throwIfNotFound: true);
        m_Sightjacking_SetGhostCamera7 = m_Sightjacking.FindAction("Set Ghost Camera 7", throwIfNotFound: true);
        m_Sightjacking_SetGhostCamera8 = m_Sightjacking.FindAction("Set Ghost Camera 8", throwIfNotFound: true);
        m_Sightjacking_SetGhostCamera9 = m_Sightjacking.FindAction("Set Ghost Camera 9", throwIfNotFound: true);
        m_Sightjacking_SetGhostCamera10 = m_Sightjacking.FindAction("Set Ghost Camera 10", throwIfNotFound: true);
        m_Sightjacking_NextGhostCamera = m_Sightjacking.FindAction("Next Ghost Camera", throwIfNotFound: true);
        m_Sightjacking_ScrollGhostCamera = m_Sightjacking.FindAction("Scroll Ghost Camera", throwIfNotFound: true);
        m_Sightjacking_Pause = m_Sightjacking.FindAction("Pause", throwIfNotFound: true);
        m_Sightjacking_Inventory = m_Sightjacking.FindAction("Inventory", throwIfNotFound: true);
        m_Sightjacking_StunEnemy = m_Sightjacking.FindAction("StunEnemy", throwIfNotFound: true);
        m_Sightjacking_JournalArchive = m_Sightjacking.FindAction("Journal Archive", throwIfNotFound: true);
        // Journal
        m_Journal = asset.FindActionMap("Journal", throwIfNotFound: true);
        m_Journal_Close = m_Journal.FindAction("Close", throwIfNotFound: true);
        m_Journal_ToggleBackground = m_Journal.FindAction("ToggleBackground", throwIfNotFound: true);
        // None
        m_None = asset.FindActionMap("None", throwIfNotFound: true);
        m_None_Pause = m_None.FindAction("Pause", throwIfNotFound: true);
        m_None_Inventory = m_None.FindAction("Inventory", throwIfNotFound: true);
        m_None_JournalArchive = m_None.FindAction("Journal Archive", throwIfNotFound: true);
        // Debug
        m_Debug = asset.FindActionMap("Debug", throwIfNotFound: true);
        m_Debug_Loadsave = m_Debug.FindAction("Load save", throwIfNotFound: true);
        m_Debug_GetAllJournals = m_Debug.FindAction("Get All Journals", throwIfNotFound: true);
        // AlienMiniGame
        m_AlienMiniGame = asset.FindActionMap("AlienMiniGame", throwIfNotFound: true);
        m_AlienMiniGame_Movement = m_AlienMiniGame.FindAction("Movement", throwIfNotFound: true);
        m_AlienMiniGame_Shoot = m_AlienMiniGame.FindAction("Shoot", throwIfNotFound: true);
        m_AlienMiniGame_RemoteViewing = m_AlienMiniGame.FindAction("RemoteViewing", throwIfNotFound: true);
        m_AlienMiniGame_Pause = m_AlienMiniGame.FindAction("Pause", throwIfNotFound: true);
        // Journal Archive
        m_JournalArchive = asset.FindActionMap("Journal Archive", throwIfNotFound: true);
        m_JournalArchive_NextEntry = m_JournalArchive.FindAction("Next Entry", throwIfNotFound: true);
        m_JournalArchive_ToggleBackground = m_JournalArchive.FindAction("ToggleBackground", throwIfNotFound: true);
        m_JournalArchive_PreviousEntry = m_JournalArchive.FindAction("Previous Entry", throwIfNotFound: true);
        m_JournalArchive_Exit = m_JournalArchive.FindAction("Exit", throwIfNotFound: true);
        m_JournalArchive_NextArea = m_JournalArchive.FindAction("Next Area", throwIfNotFound: true);
        m_JournalArchive_PreviousArea = m_JournalArchive.FindAction("Previous Area", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player Control
    private readonly InputActionMap m_PlayerControl;
    private IPlayerControlActions m_PlayerControlActionsCallbackInterface;
    private readonly InputAction m_PlayerControl_Crouch;
    private readonly InputAction m_PlayerControl_Interact;
    private readonly InputAction m_PlayerControl_CameraLook;
    private readonly InputAction m_PlayerControl_Move;
    private readonly InputAction m_PlayerControl_Sprint;
    private readonly InputAction m_PlayerControl_Sightjack;
    private readonly InputAction m_PlayerControl_Pause;
    private readonly InputAction m_PlayerControl_Inventory;
    private readonly InputAction m_PlayerControl_JournalArchive;
    public struct PlayerControlActions
    {
        private @Controls m_Wrapper;
        public PlayerControlActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Crouch => m_Wrapper.m_PlayerControl_Crouch;
        public InputAction @Interact => m_Wrapper.m_PlayerControl_Interact;
        public InputAction @CameraLook => m_Wrapper.m_PlayerControl_CameraLook;
        public InputAction @Move => m_Wrapper.m_PlayerControl_Move;
        public InputAction @Sprint => m_Wrapper.m_PlayerControl_Sprint;
        public InputAction @Sightjack => m_Wrapper.m_PlayerControl_Sightjack;
        public InputAction @Pause => m_Wrapper.m_PlayerControl_Pause;
        public InputAction @Inventory => m_Wrapper.m_PlayerControl_Inventory;
        public InputAction @JournalArchive => m_Wrapper.m_PlayerControl_JournalArchive;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControl; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerControlActions instance)
        {
            if (m_Wrapper.m_PlayerControlActionsCallbackInterface != null)
            {
                @Crouch.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCrouch;
                @Interact.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnInteract;
                @CameraLook.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCameraLook;
                @CameraLook.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCameraLook;
                @CameraLook.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCameraLook;
                @Move.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMove;
                @Sprint.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnSprint;
                @Sightjack.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnSightjack;
                @Sightjack.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnSightjack;
                @Sightjack.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnSightjack;
                @Pause.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnPause;
                @Inventory.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnInventory;
                @JournalArchive.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnJournalArchive;
                @JournalArchive.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnJournalArchive;
                @JournalArchive.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnJournalArchive;
            }
            m_Wrapper.m_PlayerControlActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @CameraLook.started += instance.OnCameraLook;
                @CameraLook.performed += instance.OnCameraLook;
                @CameraLook.canceled += instance.OnCameraLook;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Sightjack.started += instance.OnSightjack;
                @Sightjack.performed += instance.OnSightjack;
                @Sightjack.canceled += instance.OnSightjack;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @JournalArchive.started += instance.OnJournalArchive;
                @JournalArchive.performed += instance.OnJournalArchive;
                @JournalArchive.canceled += instance.OnJournalArchive;
            }
        }
    }
    public PlayerControlActions @PlayerControl => new PlayerControlActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Navigate;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Cancel;
    private readonly InputAction m_UI_Point;
    private readonly InputAction m_UI_Click;
    private readonly InputAction m_UI_ScrollWheel;
    private readonly InputAction m_UI_MiddleClick;
    private readonly InputAction m_UI_RightClick;
    private readonly InputAction m_UI_TrackedDevicePosition;
    private readonly InputAction m_UI_TrackedDeviceOrientation;
    private readonly InputAction m_UI_Back;
    private readonly InputAction m_UI_Inventory;
    private readonly InputAction m_UI_Advance;
    private readonly InputAction m_UI_JournalArchive;
    public struct UIActions
    {
        private @Controls m_Wrapper;
        public UIActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
        public InputAction @Point => m_Wrapper.m_UI_Point;
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UI_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UI_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UI_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_UI_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UI_TrackedDeviceOrientation;
        public InputAction @Back => m_Wrapper.m_UI_Back;
        public InputAction @Inventory => m_Wrapper.m_UI_Inventory;
        public InputAction @Advance => m_Wrapper.m_UI_Advance;
        public InputAction @JournalArchive => m_Wrapper.m_UI_JournalArchive;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @TrackedDevicePosition.started -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnTrackedDeviceOrientation;
                @Back.started -= m_Wrapper.m_UIActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnBack;
                @Inventory.started -= m_Wrapper.m_UIActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnInventory;
                @Advance.started -= m_Wrapper.m_UIActionsCallbackInterface.OnAdvance;
                @Advance.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnAdvance;
                @Advance.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnAdvance;
                @JournalArchive.started -= m_Wrapper.m_UIActionsCallbackInterface.OnJournalArchive;
                @JournalArchive.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnJournalArchive;
                @JournalArchive.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnJournalArchive;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
                @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
                @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
                @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @Advance.started += instance.OnAdvance;
                @Advance.performed += instance.OnAdvance;
                @Advance.canceled += instance.OnAdvance;
                @JournalArchive.started += instance.OnJournalArchive;
                @JournalArchive.performed += instance.OnJournalArchive;
                @JournalArchive.canceled += instance.OnJournalArchive;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // Sightjacking
    private readonly InputActionMap m_Sightjacking;
    private ISightjackingActions m_SightjackingActionsCallbackInterface;
    private readonly InputAction m_Sightjacking_ExitSightjacking;
    private readonly InputAction m_Sightjacking_SetGhostCamera1;
    private readonly InputAction m_Sightjacking_SetGhostCamera2;
    private readonly InputAction m_Sightjacking_SetGhostCamera3;
    private readonly InputAction m_Sightjacking_SetGhostCamera4;
    private readonly InputAction m_Sightjacking_SetGhostCamera5;
    private readonly InputAction m_Sightjacking_SetGhostCamera6;
    private readonly InputAction m_Sightjacking_SetGhostCamera7;
    private readonly InputAction m_Sightjacking_SetGhostCamera8;
    private readonly InputAction m_Sightjacking_SetGhostCamera9;
    private readonly InputAction m_Sightjacking_SetGhostCamera10;
    private readonly InputAction m_Sightjacking_NextGhostCamera;
    private readonly InputAction m_Sightjacking_ScrollGhostCamera;
    private readonly InputAction m_Sightjacking_Pause;
    private readonly InputAction m_Sightjacking_Inventory;
    private readonly InputAction m_Sightjacking_StunEnemy;
    private readonly InputAction m_Sightjacking_JournalArchive;
    public struct SightjackingActions
    {
        private @Controls m_Wrapper;
        public SightjackingActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @ExitSightjacking => m_Wrapper.m_Sightjacking_ExitSightjacking;
        public InputAction @SetGhostCamera1 => m_Wrapper.m_Sightjacking_SetGhostCamera1;
        public InputAction @SetGhostCamera2 => m_Wrapper.m_Sightjacking_SetGhostCamera2;
        public InputAction @SetGhostCamera3 => m_Wrapper.m_Sightjacking_SetGhostCamera3;
        public InputAction @SetGhostCamera4 => m_Wrapper.m_Sightjacking_SetGhostCamera4;
        public InputAction @SetGhostCamera5 => m_Wrapper.m_Sightjacking_SetGhostCamera5;
        public InputAction @SetGhostCamera6 => m_Wrapper.m_Sightjacking_SetGhostCamera6;
        public InputAction @SetGhostCamera7 => m_Wrapper.m_Sightjacking_SetGhostCamera7;
        public InputAction @SetGhostCamera8 => m_Wrapper.m_Sightjacking_SetGhostCamera8;
        public InputAction @SetGhostCamera9 => m_Wrapper.m_Sightjacking_SetGhostCamera9;
        public InputAction @SetGhostCamera10 => m_Wrapper.m_Sightjacking_SetGhostCamera10;
        public InputAction @NextGhostCamera => m_Wrapper.m_Sightjacking_NextGhostCamera;
        public InputAction @ScrollGhostCamera => m_Wrapper.m_Sightjacking_ScrollGhostCamera;
        public InputAction @Pause => m_Wrapper.m_Sightjacking_Pause;
        public InputAction @Inventory => m_Wrapper.m_Sightjacking_Inventory;
        public InputAction @StunEnemy => m_Wrapper.m_Sightjacking_StunEnemy;
        public InputAction @JournalArchive => m_Wrapper.m_Sightjacking_JournalArchive;
        public InputActionMap Get() { return m_Wrapper.m_Sightjacking; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SightjackingActions set) { return set.Get(); }
        public void SetCallbacks(ISightjackingActions instance)
        {
            if (m_Wrapper.m_SightjackingActionsCallbackInterface != null)
            {
                @ExitSightjacking.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnExitSightjacking;
                @ExitSightjacking.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnExitSightjacking;
                @ExitSightjacking.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnExitSightjacking;
                @SetGhostCamera1.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera1;
                @SetGhostCamera1.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera1;
                @SetGhostCamera1.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera1;
                @SetGhostCamera2.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera2;
                @SetGhostCamera2.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera2;
                @SetGhostCamera2.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera2;
                @SetGhostCamera3.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera3;
                @SetGhostCamera3.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera3;
                @SetGhostCamera3.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera3;
                @SetGhostCamera4.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera4;
                @SetGhostCamera4.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera4;
                @SetGhostCamera4.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera4;
                @SetGhostCamera5.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera5;
                @SetGhostCamera5.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera5;
                @SetGhostCamera5.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera5;
                @SetGhostCamera6.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera6;
                @SetGhostCamera6.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera6;
                @SetGhostCamera6.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera6;
                @SetGhostCamera7.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera7;
                @SetGhostCamera7.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera7;
                @SetGhostCamera7.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera7;
                @SetGhostCamera8.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera8;
                @SetGhostCamera8.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera8;
                @SetGhostCamera8.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera8;
                @SetGhostCamera9.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera9;
                @SetGhostCamera9.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera9;
                @SetGhostCamera9.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera9;
                @SetGhostCamera10.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera10;
                @SetGhostCamera10.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera10;
                @SetGhostCamera10.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnSetGhostCamera10;
                @NextGhostCamera.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnNextGhostCamera;
                @NextGhostCamera.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnNextGhostCamera;
                @NextGhostCamera.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnNextGhostCamera;
                @ScrollGhostCamera.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnScrollGhostCamera;
                @ScrollGhostCamera.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnScrollGhostCamera;
                @ScrollGhostCamera.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnScrollGhostCamera;
                @Pause.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnPause;
                @Inventory.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnInventory;
                @StunEnemy.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnStunEnemy;
                @StunEnemy.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnStunEnemy;
                @StunEnemy.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnStunEnemy;
                @JournalArchive.started -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnJournalArchive;
                @JournalArchive.performed -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnJournalArchive;
                @JournalArchive.canceled -= m_Wrapper.m_SightjackingActionsCallbackInterface.OnJournalArchive;
            }
            m_Wrapper.m_SightjackingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ExitSightjacking.started += instance.OnExitSightjacking;
                @ExitSightjacking.performed += instance.OnExitSightjacking;
                @ExitSightjacking.canceled += instance.OnExitSightjacking;
                @SetGhostCamera1.started += instance.OnSetGhostCamera1;
                @SetGhostCamera1.performed += instance.OnSetGhostCamera1;
                @SetGhostCamera1.canceled += instance.OnSetGhostCamera1;
                @SetGhostCamera2.started += instance.OnSetGhostCamera2;
                @SetGhostCamera2.performed += instance.OnSetGhostCamera2;
                @SetGhostCamera2.canceled += instance.OnSetGhostCamera2;
                @SetGhostCamera3.started += instance.OnSetGhostCamera3;
                @SetGhostCamera3.performed += instance.OnSetGhostCamera3;
                @SetGhostCamera3.canceled += instance.OnSetGhostCamera3;
                @SetGhostCamera4.started += instance.OnSetGhostCamera4;
                @SetGhostCamera4.performed += instance.OnSetGhostCamera4;
                @SetGhostCamera4.canceled += instance.OnSetGhostCamera4;
                @SetGhostCamera5.started += instance.OnSetGhostCamera5;
                @SetGhostCamera5.performed += instance.OnSetGhostCamera5;
                @SetGhostCamera5.canceled += instance.OnSetGhostCamera5;
                @SetGhostCamera6.started += instance.OnSetGhostCamera6;
                @SetGhostCamera6.performed += instance.OnSetGhostCamera6;
                @SetGhostCamera6.canceled += instance.OnSetGhostCamera6;
                @SetGhostCamera7.started += instance.OnSetGhostCamera7;
                @SetGhostCamera7.performed += instance.OnSetGhostCamera7;
                @SetGhostCamera7.canceled += instance.OnSetGhostCamera7;
                @SetGhostCamera8.started += instance.OnSetGhostCamera8;
                @SetGhostCamera8.performed += instance.OnSetGhostCamera8;
                @SetGhostCamera8.canceled += instance.OnSetGhostCamera8;
                @SetGhostCamera9.started += instance.OnSetGhostCamera9;
                @SetGhostCamera9.performed += instance.OnSetGhostCamera9;
                @SetGhostCamera9.canceled += instance.OnSetGhostCamera9;
                @SetGhostCamera10.started += instance.OnSetGhostCamera10;
                @SetGhostCamera10.performed += instance.OnSetGhostCamera10;
                @SetGhostCamera10.canceled += instance.OnSetGhostCamera10;
                @NextGhostCamera.started += instance.OnNextGhostCamera;
                @NextGhostCamera.performed += instance.OnNextGhostCamera;
                @NextGhostCamera.canceled += instance.OnNextGhostCamera;
                @ScrollGhostCamera.started += instance.OnScrollGhostCamera;
                @ScrollGhostCamera.performed += instance.OnScrollGhostCamera;
                @ScrollGhostCamera.canceled += instance.OnScrollGhostCamera;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @StunEnemy.started += instance.OnStunEnemy;
                @StunEnemy.performed += instance.OnStunEnemy;
                @StunEnemy.canceled += instance.OnStunEnemy;
                @JournalArchive.started += instance.OnJournalArchive;
                @JournalArchive.performed += instance.OnJournalArchive;
                @JournalArchive.canceled += instance.OnJournalArchive;
            }
        }
    }
    public SightjackingActions @Sightjacking => new SightjackingActions(this);

    // Journal
    private readonly InputActionMap m_Journal;
    private IJournalActions m_JournalActionsCallbackInterface;
    private readonly InputAction m_Journal_Close;
    private readonly InputAction m_Journal_ToggleBackground;
    public struct JournalActions
    {
        private @Controls m_Wrapper;
        public JournalActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Close => m_Wrapper.m_Journal_Close;
        public InputAction @ToggleBackground => m_Wrapper.m_Journal_ToggleBackground;
        public InputActionMap Get() { return m_Wrapper.m_Journal; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(JournalActions set) { return set.Get(); }
        public void SetCallbacks(IJournalActions instance)
        {
            if (m_Wrapper.m_JournalActionsCallbackInterface != null)
            {
                @Close.started -= m_Wrapper.m_JournalActionsCallbackInterface.OnClose;
                @Close.performed -= m_Wrapper.m_JournalActionsCallbackInterface.OnClose;
                @Close.canceled -= m_Wrapper.m_JournalActionsCallbackInterface.OnClose;
                @ToggleBackground.started -= m_Wrapper.m_JournalActionsCallbackInterface.OnToggleBackground;
                @ToggleBackground.performed -= m_Wrapper.m_JournalActionsCallbackInterface.OnToggleBackground;
                @ToggleBackground.canceled -= m_Wrapper.m_JournalActionsCallbackInterface.OnToggleBackground;
            }
            m_Wrapper.m_JournalActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Close.started += instance.OnClose;
                @Close.performed += instance.OnClose;
                @Close.canceled += instance.OnClose;
                @ToggleBackground.started += instance.OnToggleBackground;
                @ToggleBackground.performed += instance.OnToggleBackground;
                @ToggleBackground.canceled += instance.OnToggleBackground;
            }
        }
    }
    public JournalActions @Journal => new JournalActions(this);

    // None
    private readonly InputActionMap m_None;
    private INoneActions m_NoneActionsCallbackInterface;
    private readonly InputAction m_None_Pause;
    private readonly InputAction m_None_Inventory;
    private readonly InputAction m_None_JournalArchive;
    public struct NoneActions
    {
        private @Controls m_Wrapper;
        public NoneActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pause => m_Wrapper.m_None_Pause;
        public InputAction @Inventory => m_Wrapper.m_None_Inventory;
        public InputAction @JournalArchive => m_Wrapper.m_None_JournalArchive;
        public InputActionMap Get() { return m_Wrapper.m_None; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(NoneActions set) { return set.Get(); }
        public void SetCallbacks(INoneActions instance)
        {
            if (m_Wrapper.m_NoneActionsCallbackInterface != null)
            {
                @Pause.started -= m_Wrapper.m_NoneActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_NoneActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_NoneActionsCallbackInterface.OnPause;
                @Inventory.started -= m_Wrapper.m_NoneActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_NoneActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_NoneActionsCallbackInterface.OnInventory;
                @JournalArchive.started -= m_Wrapper.m_NoneActionsCallbackInterface.OnJournalArchive;
                @JournalArchive.performed -= m_Wrapper.m_NoneActionsCallbackInterface.OnJournalArchive;
                @JournalArchive.canceled -= m_Wrapper.m_NoneActionsCallbackInterface.OnJournalArchive;
            }
            m_Wrapper.m_NoneActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @JournalArchive.started += instance.OnJournalArchive;
                @JournalArchive.performed += instance.OnJournalArchive;
                @JournalArchive.canceled += instance.OnJournalArchive;
            }
        }
    }
    public NoneActions @None => new NoneActions(this);

    // Debug
    private readonly InputActionMap m_Debug;
    private IDebugActions m_DebugActionsCallbackInterface;
    private readonly InputAction m_Debug_Loadsave;
    private readonly InputAction m_Debug_GetAllJournals;
    public struct DebugActions
    {
        private @Controls m_Wrapper;
        public DebugActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Loadsave => m_Wrapper.m_Debug_Loadsave;
        public InputAction @GetAllJournals => m_Wrapper.m_Debug_GetAllJournals;
        public InputActionMap Get() { return m_Wrapper.m_Debug; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebugActions set) { return set.Get(); }
        public void SetCallbacks(IDebugActions instance)
        {
            if (m_Wrapper.m_DebugActionsCallbackInterface != null)
            {
                @Loadsave.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnLoadsave;
                @Loadsave.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnLoadsave;
                @Loadsave.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnLoadsave;
                @GetAllJournals.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnGetAllJournals;
                @GetAllJournals.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnGetAllJournals;
                @GetAllJournals.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnGetAllJournals;
            }
            m_Wrapper.m_DebugActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Loadsave.started += instance.OnLoadsave;
                @Loadsave.performed += instance.OnLoadsave;
                @Loadsave.canceled += instance.OnLoadsave;
                @GetAllJournals.started += instance.OnGetAllJournals;
                @GetAllJournals.performed += instance.OnGetAllJournals;
                @GetAllJournals.canceled += instance.OnGetAllJournals;
            }
        }
    }
    public DebugActions @Debug => new DebugActions(this);

    // AlienMiniGame
    private readonly InputActionMap m_AlienMiniGame;
    private IAlienMiniGameActions m_AlienMiniGameActionsCallbackInterface;
    private readonly InputAction m_AlienMiniGame_Movement;
    private readonly InputAction m_AlienMiniGame_Shoot;
    private readonly InputAction m_AlienMiniGame_RemoteViewing;
    private readonly InputAction m_AlienMiniGame_Pause;
    public struct AlienMiniGameActions
    {
        private @Controls m_Wrapper;
        public AlienMiniGameActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_AlienMiniGame_Movement;
        public InputAction @Shoot => m_Wrapper.m_AlienMiniGame_Shoot;
        public InputAction @RemoteViewing => m_Wrapper.m_AlienMiniGame_RemoteViewing;
        public InputAction @Pause => m_Wrapper.m_AlienMiniGame_Pause;
        public InputActionMap Get() { return m_Wrapper.m_AlienMiniGame; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AlienMiniGameActions set) { return set.Get(); }
        public void SetCallbacks(IAlienMiniGameActions instance)
        {
            if (m_Wrapper.m_AlienMiniGameActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_AlienMiniGameActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_AlienMiniGameActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_AlienMiniGameActionsCallbackInterface.OnMovement;
                @Shoot.started -= m_Wrapper.m_AlienMiniGameActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_AlienMiniGameActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_AlienMiniGameActionsCallbackInterface.OnShoot;
                @RemoteViewing.started -= m_Wrapper.m_AlienMiniGameActionsCallbackInterface.OnRemoteViewing;
                @RemoteViewing.performed -= m_Wrapper.m_AlienMiniGameActionsCallbackInterface.OnRemoteViewing;
                @RemoteViewing.canceled -= m_Wrapper.m_AlienMiniGameActionsCallbackInterface.OnRemoteViewing;
                @Pause.started -= m_Wrapper.m_AlienMiniGameActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_AlienMiniGameActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_AlienMiniGameActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_AlienMiniGameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @RemoteViewing.started += instance.OnRemoteViewing;
                @RemoteViewing.performed += instance.OnRemoteViewing;
                @RemoteViewing.canceled += instance.OnRemoteViewing;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public AlienMiniGameActions @AlienMiniGame => new AlienMiniGameActions(this);

    // Journal Archive
    private readonly InputActionMap m_JournalArchive;
    private IJournalArchiveActions m_JournalArchiveActionsCallbackInterface;
    private readonly InputAction m_JournalArchive_NextEntry;
    private readonly InputAction m_JournalArchive_ToggleBackground;
    private readonly InputAction m_JournalArchive_PreviousEntry;
    private readonly InputAction m_JournalArchive_Exit;
    private readonly InputAction m_JournalArchive_NextArea;
    private readonly InputAction m_JournalArchive_PreviousArea;
    public struct JournalArchiveActions
    {
        private @Controls m_Wrapper;
        public JournalArchiveActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @NextEntry => m_Wrapper.m_JournalArchive_NextEntry;
        public InputAction @ToggleBackground => m_Wrapper.m_JournalArchive_ToggleBackground;
        public InputAction @PreviousEntry => m_Wrapper.m_JournalArchive_PreviousEntry;
        public InputAction @Exit => m_Wrapper.m_JournalArchive_Exit;
        public InputAction @NextArea => m_Wrapper.m_JournalArchive_NextArea;
        public InputAction @PreviousArea => m_Wrapper.m_JournalArchive_PreviousArea;
        public InputActionMap Get() { return m_Wrapper.m_JournalArchive; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(JournalArchiveActions set) { return set.Get(); }
        public void SetCallbacks(IJournalArchiveActions instance)
        {
            if (m_Wrapper.m_JournalArchiveActionsCallbackInterface != null)
            {
                @NextEntry.started -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnNextEntry;
                @NextEntry.performed -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnNextEntry;
                @NextEntry.canceled -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnNextEntry;
                @ToggleBackground.started -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnToggleBackground;
                @ToggleBackground.performed -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnToggleBackground;
                @ToggleBackground.canceled -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnToggleBackground;
                @PreviousEntry.started -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnPreviousEntry;
                @PreviousEntry.performed -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnPreviousEntry;
                @PreviousEntry.canceled -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnPreviousEntry;
                @Exit.started -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnExit;
                @Exit.performed -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnExit;
                @Exit.canceled -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnExit;
                @NextArea.started -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnNextArea;
                @NextArea.performed -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnNextArea;
                @NextArea.canceled -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnNextArea;
                @PreviousArea.started -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnPreviousArea;
                @PreviousArea.performed -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnPreviousArea;
                @PreviousArea.canceled -= m_Wrapper.m_JournalArchiveActionsCallbackInterface.OnPreviousArea;
            }
            m_Wrapper.m_JournalArchiveActionsCallbackInterface = instance;
            if (instance != null)
            {
                @NextEntry.started += instance.OnNextEntry;
                @NextEntry.performed += instance.OnNextEntry;
                @NextEntry.canceled += instance.OnNextEntry;
                @ToggleBackground.started += instance.OnToggleBackground;
                @ToggleBackground.performed += instance.OnToggleBackground;
                @ToggleBackground.canceled += instance.OnToggleBackground;
                @PreviousEntry.started += instance.OnPreviousEntry;
                @PreviousEntry.performed += instance.OnPreviousEntry;
                @PreviousEntry.canceled += instance.OnPreviousEntry;
                @Exit.started += instance.OnExit;
                @Exit.performed += instance.OnExit;
                @Exit.canceled += instance.OnExit;
                @NextArea.started += instance.OnNextArea;
                @NextArea.performed += instance.OnNextArea;
                @NextArea.canceled += instance.OnNextArea;
                @PreviousArea.started += instance.OnPreviousArea;
                @PreviousArea.performed += instance.OnPreviousArea;
                @PreviousArea.canceled += instance.OnPreviousArea;
            }
        }
    }
    public JournalArchiveActions @JournalArchive => new JournalArchiveActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard & Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerControlActions
    {
        void OnCrouch(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnCameraLook(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnSightjack(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnJournalArchive(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnAdvance(InputAction.CallbackContext context);
        void OnJournalArchive(InputAction.CallbackContext context);
    }
    public interface ISightjackingActions
    {
        void OnExitSightjacking(InputAction.CallbackContext context);
        void OnSetGhostCamera1(InputAction.CallbackContext context);
        void OnSetGhostCamera2(InputAction.CallbackContext context);
        void OnSetGhostCamera3(InputAction.CallbackContext context);
        void OnSetGhostCamera4(InputAction.CallbackContext context);
        void OnSetGhostCamera5(InputAction.CallbackContext context);
        void OnSetGhostCamera6(InputAction.CallbackContext context);
        void OnSetGhostCamera7(InputAction.CallbackContext context);
        void OnSetGhostCamera8(InputAction.CallbackContext context);
        void OnSetGhostCamera9(InputAction.CallbackContext context);
        void OnSetGhostCamera10(InputAction.CallbackContext context);
        void OnNextGhostCamera(InputAction.CallbackContext context);
        void OnScrollGhostCamera(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnStunEnemy(InputAction.CallbackContext context);
        void OnJournalArchive(InputAction.CallbackContext context);
    }
    public interface IJournalActions
    {
        void OnClose(InputAction.CallbackContext context);
        void OnToggleBackground(InputAction.CallbackContext context);
    }
    public interface INoneActions
    {
        void OnPause(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnJournalArchive(InputAction.CallbackContext context);
    }
    public interface IDebugActions
    {
        void OnLoadsave(InputAction.CallbackContext context);
        void OnGetAllJournals(InputAction.CallbackContext context);
    }
    public interface IAlienMiniGameActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnRemoteViewing(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IJournalArchiveActions
    {
        void OnNextEntry(InputAction.CallbackContext context);
        void OnToggleBackground(InputAction.CallbackContext context);
        void OnPreviousEntry(InputAction.CallbackContext context);
        void OnExit(InputAction.CallbackContext context);
        void OnNextArea(InputAction.CallbackContext context);
        void OnPreviousArea(InputAction.CallbackContext context);
    }
}
